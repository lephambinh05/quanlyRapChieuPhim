@model List<CinemaManagement.Models.Phim>
@{
    ViewData["Title"] = "Danh sách phim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                                        <div class="card-header bg-primary text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h4 class="mb-0">
                                    <i class="fas fa-film me-2"></i>Danh sách phim đang chiếu
                                </h4>
                                @if (Model != null && Model.Any())
                                {
                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-list me-1"></i>@Model.Count phim
                                    </span>
                                }
                            </div>
                        </div>
                <div class="card-body">
                    <!-- Bộ lọc và tìm kiếm -->
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="search-container position-relative">
                                <div class="input-group">
                                    <input type="text" id="searchInput" name="searchTerm" class="form-control search-input" 
                                           placeholder="Tìm kiếm phim, thể loại..." value="@ViewBag.CurrentSearch"
                                           autocomplete="off">
                                    <button type="button" class="btn btn-outline-primary" id="searchBtn">
                                        <i class="fas fa-search"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" id="advancedSearchBtn" 
                                            data-bs-toggle="modal" data-bs-target="#advancedSearchModal">
                                        <i class="fas fa-filter"></i>
                                    </button>
                                </div>
                                <!-- Autocomplete dropdown -->
                                <div id="searchSuggestions" class="search-suggestions" style="display: none;">
                                    <div class="suggestions-header">
                                        <i class="fas fa-lightbulb me-2"></i>
                                        <span>Gợi ý tìm kiếm</span>
                                    </div>
                                    <div id="suggestionsList" class="suggestions-list">
                                        <!-- Suggestions will be populated here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="dropdown">
                                <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" 
                                        data-bs-toggle="dropdown" aria-expanded="false">
                                    @(ViewBag.CurrentTheLoai ?? "Tất cả thể loại")
                                </button>
                                <ul class="dropdown-menu w-100">
                                    <li><a class="dropdown-item" href="@Url.Action("Index")">Tất cả thể loại</a></li>
                                    @if (ViewBag.TheLoais != null)
                                    {
                                        @foreach (string theLoai in ViewBag.TheLoais)
                                        {
                                            <li><a class="dropdown-item" href="@Url.Action("Index", new { theLoai = theLoai })">@theLoai</a></li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="d-flex gap-2">
                                <div class="dropdown flex-grow-1">
                                    <button class="btn btn-outline-info dropdown-toggle w-100" type="button" 
                                            data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-sort me-1"></i>
                                        @{
                                            var sortOptionsDisplay = new Dictionary<string, string>
                                            {
                                                { "name", "Tên phim" },
                                                { "price", "Giá vé" },
                                                { "popularity", "Độ phổ biến" },
                                                { "duration", "Thời lượng" },
                                                { "rating", "Đánh giá" }
                                            };
                                            var currentSortBy = ViewBag.CurrentSortBy ?? "name";
                                            @sortOptionsDisplay[currentSortBy]
                                        }
                                    </button>
                                    <ul class="dropdown-menu w-100">
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = "name", sortOrder = ViewBag.CurrentSortOrder, theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-font me-2"></i>Tên phim
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = "price", sortOrder = ViewBag.CurrentSortOrder, theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-tag me-2"></i>Giá vé
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = "popularity", sortOrder = ViewBag.CurrentSortOrder, theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-fire me-2"></i>Độ phổ biến
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = "duration", sortOrder = ViewBag.CurrentSortOrder, theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-clock me-2"></i>Thời lượng
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = "rating", sortOrder = ViewBag.CurrentSortOrder, theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-star me-2"></i>Đánh giá
                                        </a></li>
                                    </ul>
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-outline-warning dropdown-toggle" type="button" 
                                            data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-sort-amount-@(ViewBag.CurrentSortOrder == "desc" ? "down" : "up")"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = ViewBag.CurrentSortBy, sortOrder = "asc", theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-sort-amount-up me-2"></i>Tăng dần
                                        </a></li>
                                        <li><a class="dropdown-item" href="@Url.Action("Index", new { sortBy = ViewBag.CurrentSortBy, sortOrder = "desc", theLoai = ViewBag.CurrentTheLoai, searchTerm = ViewBag.CurrentSearch })">
                                            <i class="fas fa-sort-amount-down me-2"></i>Giảm dần
                                        </a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin sắp xếp hiện tại -->
                    @if (!string.IsNullOrEmpty(ViewBag.CurrentSortBy) || !string.IsNullOrEmpty(ViewBag.CurrentTheLoai) || !string.IsNullOrEmpty(ViewBag.CurrentSearch))
                    {
                        <div class="alert alert-info alert-dismissible fade show mb-3" role="alert">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-filter me-2"></i>
                                <div class="flex-grow-1">
                                    <strong>Bộ lọc hiện tại:</strong>
                                    @{
                                        var filters = new List<string>();
                                        if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                                            filters.Add($"Tìm kiếm: \"{ViewBag.CurrentSearch}\"");
                                        if (!string.IsNullOrEmpty(ViewBag.CurrentTheLoai))
                                            filters.Add($"Thể loại: {ViewBag.CurrentTheLoai}");
                                        if (!string.IsNullOrEmpty(ViewBag.CurrentSortBy))
                                        {
                                            var sortOptionsFilter = new Dictionary<string, string>
                                            {
                                                { "name", "Tên phim" },
                                                { "price", "Giá vé" },
                                                { "popularity", "Độ phổ biến" },
                                                { "duration", "Thời lượng" },
                                                { "rating", "Đánh giá" }
                                            };
                                            var sortOrderText = ViewBag.CurrentSortOrder == "desc" ? "giảm dần" : "tăng dần";
                                            filters.Add($"Sắp xếp: {sortOptionsFilter[ViewBag.CurrentSortBy]} ({sortOrderText})");
                                        }
                                    }
                                    <span class="text-muted">@string.Join(" | ", filters)</span>
                                </div>
                                <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                                    <i class="fas fa-times me-1"></i>Xóa bộ lọc
                                </a>
                            </div>
                        </div>
                    }

                    <!-- Danh sách phim -->
                    @if (Model != null && Model.Any())
                    {
                        <!-- Carousel Phim -->
                        <div id="phimCarousel" class="carousel slide">
                            <!-- Indicators -->
                            <div class="carousel-indicators">
                                @{
                                    var phimPerSlide = 4; // 4 phim mỗi slide
                                    var totalPhimSlides = (int)Math.Ceiling(Model.Count / (double)phimPerSlide);
                                }
                                @for (int i = 0; i < totalPhimSlides; i++)
                                {
                                    <button type="button" data-bs-target="#phimCarousel" data-bs-slide-to="@i" 
                                            class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" 
                                            aria-label="Slide @(i + 1)"></button>
                                }
                            </div>

                            <!-- Carousel Items -->
                            <div class="carousel-inner">
                                @for (int slideIndex = 0; slideIndex < totalPhimSlides; slideIndex++)
                                {
                                    <div class="carousel-item @(slideIndex == 0 ? "active" : "")">
                                        <div class="container-fluid p-4">
                                            <div class="row justify-content-center">
                                                @for (int phimIndex = 0; phimIndex < phimPerSlide; phimIndex++)
                                                {
                                                    var currentPhimIndex = slideIndex * phimPerSlide + phimIndex;
                                                    if (currentPhimIndex < Model.Count)
                                                    {
                                                        var phim = Model[currentPhimIndex];
                                                        <div class="col-md-6 col-lg-3 mb-4">
                                                            <div class="phim-carousel-card card h-100 shadow-sm">
                                                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                                                                     style="height: 250px;">
                                                                    @if (!string.IsNullOrEmpty(phim.ViTriFilePhim))
                                                                    {
                                                                        <img src="@phim.ViTriFilePhim" alt="@phim.TenPhim" 
                                                                             class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: cover;">
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="text-center text-muted">
                                                                            <i class="fas fa-film fa-2x"></i>
                                                                            <p class="mt-2 small">Không có poster</p>
                                                                        </div>
                                                                    }
                                                                </div>
                                                                <div class="card-body p-3">
                                                                    <h6 class="card-title text-primary">@phim.TenPhim</h6>
                                                                    <div class="card-text">
                                                                        <div class="info-line">
                                                                            <i class="fas fa-tag me-2 text-success"></i>
                                                                            <span class="small">@phim.TheLoai</span>
                                                                        </div>
                                                                        <div class="info-line">
                                                                            <i class="fas fa-clock me-2 text-warning"></i>
                                                                            <span class="small">@phim.ThoiLuong phút</span>
                                                                        </div>
                                                                        <div class="info-line">
                                                                            <i class="fas fa-users me-2 text-info"></i>
                                                                            <span class="small">@phim.DoTuoiPhanAnh</span>
                                                                        </div>
                                                                        @if (ViewBag.CurrentSortBy == "price")
                                                                        {
                                                                            var giaTrungBinh = phim.LichChieus?.Where(lc => lc.ThoiGianBatDau >= DateTime.Now)?.Average(lc => lc.Gia) ?? 0;
                                                                            <div class="info-line">
                                                                                <i class="fas fa-tag me-2 text-primary"></i>
                                                                                <span class="small fw-bold">@giaTrungBinh.ToString("N0") ₫</span>
                                                                            </div>
                                                                        }
                                                                        @if (ViewBag.CurrentSortBy == "popularity")
                                                                        {
                                                                            var soVeBan = phim.Ves?.Count(v => v.TrangThai == "Đã sử dụng") ?? 0;
                                                                            <div class="info-line">
                                                                                <i class="fas fa-fire me-2 text-danger"></i>
                                                                                <span class="small fw-bold">@soVeBan vé đã bán</span>
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                    <p class="card-text small text-muted mt-2">
                                                                        @(phim.MoTa.Length > 80 ? phim.MoTa.Substring(0, 80) + "..." : phim.MoTa)
                                                                    </p>
                                                                </div>
                                                                <div class="card-footer p-2">
                                                                    <a href="@Url.Action("ChiTietPhim", new { maPhim = phim.MaPhim.Trim() })" 
                                                                       class="btn btn-primary btn-sm w-100">
                                                                        <i class="fas fa-info-circle me-1"></i>Xem chi tiết
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Controls -->
                            <button class="carousel-control-prev" type="button" data-bs-target="#phimCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#phimCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-film fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không có phim nào</h5>
                            <p class="text-muted">Hiện tại không có phim nào phù hợp với tìm kiếm của bạn.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Lịch chiếu sắp tới -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-calendar-check me-2"></i>Lịch chiếu theo ngày
                        </h4>
                        <div class="d-flex align-items-center">
                            <label class="text-white me-2 mb-0">Chọn ngày:</label>
                            <input type="date" id="dateFilter" class="form-control form-control-sm" 
                                   style="width: auto; min-width: 150px;" 
                                   value="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   min="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   max="@DateTime.Today.AddDays(30).ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                </div>
                <div class="card-body p-0" id="scheduleContainer">
                    @if (ViewBag.LichChieuSapToi != null && ((List<CinemaManagement.Models.LichChieu>)ViewBag.LichChieuSapToi).Any())
                    {
                        var lichChieus = (List<CinemaManagement.Models.LichChieu>)ViewBag.LichChieuSapToi;
                        
                        <!-- Hiển thị lịch chiếu cho ngày được chọn -->
                        <div id="scheduleContent">
                            <!-- Content sẽ được load bằng JavaScript -->
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có lịch chiếu</h5>
                            <p class="text-muted">Hiện tại chưa có lịch chiếu nào trong hệ thống.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Advanced Search Modal -->
<div class="modal fade" id="advancedSearchModal" tabindex="-1" aria-labelledby="advancedSearchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="advancedSearchModalLabel">
                    <i class="fas fa-search-plus me-2"></i>Tìm kiếm nâng cao
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="advancedSearchForm">
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label for="advancedQuery" class="form-label">Từ khóa tìm kiếm</label>
                            <input type="text" class="form-control" id="advancedQuery" 
                                   placeholder="Nhập tên phim, thể loại, mô tả...">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="advancedGenre" class="form-label">Thể loại</label>
                            <select class="form-select" id="advancedGenre">
                                <option value="">Tất cả thể loại</option>
                                @if (ViewBag.TheLoais != null)
                                {
                                    @foreach (string theLoai in ViewBag.TheLoais)
                                    {
                                        <option value="@theLoai">@theLoai</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="advancedRating" class="form-label">Độ tuổi</label>
                            <select class="form-select" id="advancedRating">
                                <option value="">Tất cả độ tuổi</option>
                                <option value="P">P - Mọi lứa tuổi</option>
                                <option value="C13">C13 - Trên 13 tuổi</option>
                                <option value="C16">C16 - Trên 16 tuổi</option>
                                <option value="C18">C18 - Trên 18 tuổi</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="minDuration" class="form-label">Thời lượng tối thiểu (phút)</label>
                            <input type="number" class="form-control" id="minDuration" min="0" max="300" placeholder="0">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="maxDuration" class="form-label">Thời lượng tối đa (phút)</label>
                            <input type="number" class="form-control" id="maxDuration" min="0" max="300" placeholder="300">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Đóng
                </button>
                <button type="button" class="btn btn-primary" id="performAdvancedSearch">
                    <i class="fas fa-search me-1"></i>Tìm kiếm
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Search Results Modal -->
<div class="modal fade" id="searchResultsModal" tabindex="-1" aria-labelledby="searchResultsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="searchResultsModalLabel">
                    <i class="fas fa-list me-2"></i>Kết quả tìm kiếm
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="searchResultsContainer">
                    <!-- Search results will be populated here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Cập nhật số lượng giỏ hàng
        $(document).ready(function() {
            updateCartCount();
            
            // Tooltip
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Initialize carousel cho phim
            var phimCarousel = new bootstrap.Carousel(document.getElementById('phimCarousel'), {
                interval: 6000, // Auto slide every 6 seconds
                wrap: true,
                touch: true
            });

            // Pause phim carousel on hover
            $('#phimCarousel').hover(
                function() {
                    phimCarousel.pause();
                },
                function() {
                    phimCarousel.cycle();
                }
            );

            // Animation cho phim carousel
            $('#phimCarousel').on('slide.bs.carousel', function (e) {
                $('.carousel-item.active .phim-carousel-card').addClass('slide-out');
            });

            $('#phimCarousel').on('slid.bs.carousel', function (e) {
                $('.carousel-item.active .phim-carousel-card').each(function(index) {
                    var $card = $(this);
                    setTimeout(function() {
                        $card.addClass('slide-in');
                    }, index * 50);
                });
                $('.phim-carousel-card').removeClass('slide-out');
            });

            // Initial animation for phim carousel
            $('.carousel-item.active .phim-carousel-card').each(function(index) {
                var $card = $(this);
                setTimeout(function() {
                    $card.addClass('slide-in');
                }, index * 50);
            });

            // Date filter functionality
            $('#dateFilter').on('change', function() {
                var selectedDate = $(this).val();
                if (selectedDate) {
                    loadScheduleForDate(selectedDate);
                }
            });

            // Load schedule for today on page load
            loadScheduleForDate($('#dateFilter').val());

            // Animation for today's schedule cards
            $('.today-schedule-card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });

            // Hover effects for schedule cards
            $(document).on('mouseenter', '.today-schedule-card', function() {
                $(this).find('.btn:not(:disabled)').addClass('btn-hover-effect');
            }).on('mouseleave', '.today-schedule-card', function() {
                $(this).find('.btn').removeClass('btn-hover-effect');
            });

            // Real-time status update for showtimes
            function updateShowtimeStatus() {
                $('.today-schedule-card').each(function() {
                    // This could be enhanced with real-time data
                    // For now, just update button states based on current time
                });
            }

            // Update status manually - removed auto-refresh
            // setInterval(updateShowtimeStatus, 60000);
        });

        function loadScheduleForDate(selectedDate) {
            // Show loading state
            $('#scheduleContent').html(`
                <div class="text-center py-5">
                    <div class="spinner-border text-success" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-3 text-muted">Đang tải lịch chiếu...</p>
                </div>
            `);

            // Get all schedule data from server-side
            var allSchedules = @Html.Raw(Json.Serialize(ViewBag.LichChieuDto ?? new List<object>()));
            
            // Filter schedules for selected date
            var selectedDateObj = new Date(selectedDate);
            var filteredSchedules = allSchedules.filter(function(schedule) {
                var scheduleDate = new Date(schedule.ThoiGianBatDau || schedule.thoiGianBatDau);
                return scheduleDate.toDateString() === selectedDateObj.toDateString();
            });

            // Generate schedule HTML
            setTimeout(function() {
                if (filteredSchedules.length > 0) {
                    generateScheduleHTML(filteredSchedules, selectedDate);
                } else {
                    $('#scheduleContent').html(`
                        <div class="text-center py-5">
                            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không có suất chiếu</h5>
                            <p class="text-muted">Không có lịch chiếu nào trong ngày được chọn.</p>
                            <a href="${window.location.href}" class="btn btn-primary">
                                <i class="fas fa-film me-1"></i>Xem danh sách phim
                            </a>
                        </div>
                    `);
                }
            }, 500);
        }

        function generateScheduleHTML(schedules, selectedDate) {
            var selectedDateObj = new Date(selectedDate);
            var now = new Date();
            var dayNames = ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'];
            var dayName = dayNames[selectedDateObj.getDay()];
            var formattedDate = dayName + ', ' + selectedDateObj.getDate().toString().padStart(2, '0') + '/' + 
                               (selectedDateObj.getMonth() + 1).toString().padStart(2, '0') + '/' + selectedDateObj.getFullYear();

            var html = `
                <div class="container-fluid p-4">
                    <div class="current-day-header text-center mb-4">
                        <h5 class="text-primary mb-2">
                            <i class="fas fa-calendar-day me-2"></i>
                            Lịch chiếu ngày ${formattedDate}
                        </h5>
                        <span class="badge bg-primary fs-6">${schedules.length} suất chiếu</span>
                    </div>
                    <div class="row g-3">
            `;

            schedules.forEach(function(schedule, index) {
                var startTime = new Date(schedule.ThoiGianBatDau || schedule.thoiGianBatDau);
                var endTime = new Date(schedule.ThoiGianKetThuc || schedule.thoiGianKetThuc);
                var isShowtime = startTime > now;
                var timeStatus, btnClass, btnText;

                if (endTime < now) {
                    timeStatus = "Đã kết thúc";
                    btnClass = "btn-secondary";
                    btnText = "Đã chiếu";
                } else if (startTime <= now && endTime > now) {
                    timeStatus = "Đang chiếu";
                    btnClass = "btn-warning";
                    btnText = "Đang chiếu";
                } else {
                    timeStatus = "Sắp chiếu";
                    btnClass = "btn-primary";
                    btnText = "Đặt vé ngay";
                }

                var formatTime = function(date) {
                    return date.getHours().toString().padStart(2, '0') + ':' + 
                           date.getMinutes().toString().padStart(2, '0');
                };

                var formatCurrency = function(amount) {
                    return new Intl.NumberFormat('vi-VN').format(amount);
                };

                // Get properties with fallback for both PascalCase and camelCase
                var phongChieu = schedule.PhongChieu || schedule.phongChieu;
                var phim = schedule.Phim || schedule.phim;
                var gia = schedule.Gia || schedule.gia;

                html += `
                    <div class="col-md-6 col-lg-4 col-xl-3">
                        <div class="today-schedule-card" style="animation-delay: ${index * 0.1}s">
                            <div class="schedule-time-header">
                                <span class="schedule-time">${formatTime(startTime)}</span>
                                <small class="text-white">- ${formatTime(endTime)}</small>
                            </div>
                            <div class="schedule-content">
                                <h6 class="movie-title text-primary mb-2">${(phim.TenPhim || phim.tenPhim)}</h6>
                                <div class="schedule-info">
                                    <div class="info-item">
                                        <i class="fas fa-map-marker-alt text-primary me-2"></i>
                                        <span class="small">${(phongChieu.TenPhong || phongChieu.tenPhong)}</span>
                                    </div>
                                    <div class="info-item">
                                        <i class="fas fa-tag text-primary me-2"></i>
                                        <span class="fw-bold text-primary">${formatCurrency(gia)} VNĐ</span>
                                    </div>
                                </div>
                                <div class="schedule-action mt-3">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="status-badge badge bg-info">${timeStatus}</small>
                `;

                if (isShowtime) {
                    html += `
                                        <a href="/KhachHang/ChonGhe?maLichChieu=${schedule.MaLichChieu || schedule.maLichChieu}" class="btn ${btnClass} btn-sm">
                                            <i class="fas fa-ticket-alt me-1"></i>${btnText}
                                        </a>
                    `;
                } else {
                    html += `
                                        <button class="btn ${btnClass} btn-sm" disabled>
                                            <i class="fas fa-clock me-1"></i>${btnText}
                                        </button>
                    `;
                }

                html += `
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });

            html += `
                    </div>
                </div>
            `;

            $('#scheduleContent').html(html);

            // Re-apply animations
            $('.today-schedule-card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });
        }

        function updateCartCount() {
            // Lấy số lượng từ sessionStorage hoặc API
            var cart = JSON.parse(sessionStorage.getItem('cart') || '[]');
            $('#cart-count').text(cart.length);
        }

        // Search and Autocomplete functionality
        $(document).ready(function() {
            var searchTimeout;
            var currentSuggestions = [];

            // Highlight dropdown item hiện tại
            $('.dropdown-item').each(function() {
                var href = $(this).attr('href');
                if (href && href.includes('sortBy=' + '@ViewBag.CurrentSortBy')) {
                    $(this).addClass('sort-active');
                }
            });

            // Animation cho dropdown items
            $('.dropdown-item').hover(
                function() {
                    $(this).find('i').addClass('fa-bounce');
                },
                function() {
                    $(this).find('i').removeClass('fa-bounce');
                }
            );

            // Tooltip cho các nút sắp xếp
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Auto-submit form khi thay đổi dropdown
            $('.sort-dropdown select').on('change', function() {
                $(this).closest('form').submit();
            });

            // Search input autocomplete
            $('#searchInput').on('input', function() {
                var query = $(this).val().trim();
                
                clearTimeout(searchTimeout);
                
                if (query.length < 2) {
                    hideSuggestions();
                    return;
                }

                searchTimeout = setTimeout(function() {
                    fetchSuggestions(query);
                }, 300);
            });

            // Handle search button click
            $('#searchBtn').on('click', function() {
                performSearch();
            });

            // Handle Enter key in search input
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    performSearch();
                }
            });

            // Handle suggestion clicks
            $(document).on('click', '.suggestion-item', function() {
                var suggestion = $(this).data('suggestion');
                $('#searchInput').val(suggestion.title);
                hideSuggestions();
                
                if (suggestion.type === 'phim') {
                    // Navigate to movie detail
                    window.location.href = '/KhachHang/ChiTietPhim/' + encodeURIComponent(suggestion.id.trim());
                } else if (suggestion.type === 'genre') {
                    // Filter by genre
                    window.location.href = '/KhachHang/Index?theLoai=' + encodeURIComponent(suggestion.genre);
                }
            });

            // Hide suggestions when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.search-container').length) {
                    hideSuggestions();
                }
            });

            // Advanced search functionality
            $('#performAdvancedSearch').on('click', function() {
                performAdvancedSearch();
            });

            // Handle Enter key in advanced search
            $('#advancedQuery').on('keypress', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    performAdvancedSearch();
                }
            });

            function fetchSuggestions(query) {
                $.ajax({
                    url: '/KhachHang/SearchPhim',
                    method: 'GET',
                    data: { query: query, limit: 8 },
                    success: function(response) {
                        if (response.success) {
                            currentSuggestions = response.suggestions;
                            displaySuggestions(response.suggestions);
                        }
                    },
                    error: function() {
                        console.log('Error fetching suggestions');
                    }
                });
            }

            function displaySuggestions(suggestions) {
                var $suggestionsList = $('#suggestionsList');
                $suggestionsList.empty();

                if (suggestions.length === 0) {
                    $suggestionsList.append(`
                        <div class="suggestion-item no-results">
                            <i class="fas fa-info-circle me-2"></i>
                            <span>Không tìm thấy kết quả</span>
                        </div>
                    `);
                } else {
                    suggestions.forEach(function(suggestion, index) {
                        var icon = suggestion.type === 'phim' ? 'fas fa-film' : 'fas fa-tag';
                        var badge = suggestion.type === 'genre' ? '<span class="badge bg-info ms-2">Thể loại</span>' : '';
                        
                        $suggestionsList.append(`
                            <div class="suggestion-item" data-suggestion='${JSON.stringify(suggestion)}'>
                                <div class="d-flex align-items-center">
                                    <i class="${icon} me-2"></i>
                                    <div class="flex-grow-1">
                                        <div class="suggestion-title">${suggestion.title}</div>
                                        ${suggestion.type === 'phim' ? 
                                            `<div class="suggestion-details">
                                                <small class="text-muted">
                                                    ${suggestion.genre} • ${suggestion.duration} phút • ${suggestion.rating}
                                                </small>
                                            </div>` : ''
                                        }
                                    </div>
                                    ${badge}
                                </div>
                            </div>
                        `);
                    });
                }

                $('#searchSuggestions').show();
            }

            function hideSuggestions() {
                $('#searchSuggestions').hide();
            }

            function performSearch() {
                var query = $('#searchInput').val().trim();
                if (query) {
                    window.location.href = '/KhachHang/Index?searchTerm=' + encodeURIComponent(query);
                }
            }

            function performAdvancedSearch() {
                var query = $('#advancedQuery').val().trim();
                var genre = $('#advancedGenre').val();
                var rating = $('#advancedRating').val();
                var minDuration = $('#minDuration').val();
                var maxDuration = $('#maxDuration').val();

                // Build query parameters
                var params = [];
                if (query) params.push('query=' + encodeURIComponent(query));
                if (genre) params.push('genre=' + encodeURIComponent(genre));
                if (rating) params.push('rating=' + encodeURIComponent(rating));
                if (minDuration) params.push('minDuration=' + minDuration);
                if (maxDuration) params.push('maxDuration=' + maxDuration);

                var url = '/KhachHang/AdvancedSearch?' + params.join('&');

                $.ajax({
                    url: url,
                    method: 'GET',
                    success: function(response) {
                        if (response.success) {
                            displayAdvancedSearchResults(response.results);
                            $('#advancedSearchModal').modal('hide');
                            $('#searchResultsModal').modal('show');
                        } else {
                            alert('Có lỗi xảy ra: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi tìm kiếm');
                    }
                });
            }

            function displayAdvancedSearchResults(results) {
                var $container = $('#searchResultsContainer');
                $container.empty();

                if (results.length === 0) {
                    $container.html(`
                        <div class="text-center py-5">
                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không tìm thấy kết quả</h5>
                            <p class="text-muted">Thử thay đổi tiêu chí tìm kiếm</p>
                        </div>
                    `);
                    return;
                }

                var html = `
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                Tìm thấy <strong>${results.length}</strong> kết quả
                            </div>
                        </div>
                    </div>
                    <div class="row">
                `;

                results.forEach(function(movie) {
                    var imageUrl = movie.imageUrl || '/images/movie-placeholder.svg';
                    var scheduleBadge = movie.hasSchedule ? 
                        '<span class="badge bg-success ms-2">Có lịch chiếu</span>' : 
                        '<span class="badge bg-secondary ms-2">Chưa có lịch</span>';

                    html += `
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 search-result-card">
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                                     style="height: 200px;">
                                    <img src="${imageUrl}" alt="${movie.title}" 
                                         class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: cover;"
                                         onerror="this.src='/images/movie-placeholder.svg'">
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title text-primary">${movie.title}</h6>
                                    <div class="card-text">
                                        <div class="mb-2">
                                            <i class="fas fa-tag me-2 text-success"></i>
                                            <span class="small">${movie.genre}</span>
                                        </div>
                                        <div class="mb-2">
                                            <i class="fas fa-clock me-2 text-warning"></i>
                                            <span class="small">${movie.duration} phút</span>
                                        </div>
                                        <div class="mb-2">
                                            <i class="fas fa-users me-2 text-info"></i>
                                            <span class="small">${movie.rating}</span>
                                            ${scheduleBadge}
                                        </div>
                                    </div>
                                    <p class="card-text small text-muted mt-2">
                                        ${movie.description && movie.description.length > 100 ? 
                                            movie.description.substring(0, 100) + '...' : 
                                            movie.description || 'Không có mô tả'}
                                    </p>
                                </div>
                                <div class="card-footer">
                                    <a href="/KhachHang/ChiTietPhim/${encodeURIComponent(movie.id.trim())}" class="btn btn-primary btn-sm w-100">
                                        <i class="fas fa-info-circle me-1"></i>Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    `;
                });

                html += '</div>';
                $container.html(html);
            }
        });
    </script>
    <style>
        .lich-chieu-item {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef !important;
        }
        .lich-chieu-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-color: #28a745 !important;
        }
        .card-header h6 {
            text-transform: capitalize;
        }
        .btn-outline-success:hover {
            transform: scale(1.05);
        }

        /* Carousel Styles */
        #lichChieuCarousel, #phimCarousel {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        /* Phim Carousel Styles */
        .phim-carousel-card {
            transition: all 0.4s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border: none;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
        }

        .phim-carousel-card.slide-in {
            opacity: 1;
            transform: translateY(0);
        }

        .phim-carousel-card.slide-out {
            opacity: 0;
            transform: translateY(-20px);
        }
        
        .phim-carousel-card:hover {
            transform: translateY(-8px) scale(1.03);
            box-shadow: 0 8px 30px rgba(0,123,255,0.3);
        }

        .phim-carousel-card .card-img-top img {
            transition: all 0.3s ease;
        }

        .phim-carousel-card:hover .card-img-top img {
            transform: scale(1.05);
        }

        .phim-carousel-card .info-line {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

        .phim-carousel-card .card-title {
            font-size: 15px;
            font-weight: 600;
            margin-bottom: 10px;
            line-height: 1.3;
        }

        #phimCarousel .carousel-control-prev, 
        #phimCarousel .carousel-control-next {
            width: 5%;
            background: rgba(0, 123, 255, 0.1);
        }
        
        #phimCarousel .carousel-control-prev-icon, 
        #phimCarousel .carousel-control-next-icon {
            background-color: #007bff;
            border-radius: 50%;
            padding: 20px;
        }

        #phimCarousel .carousel-indicators {
            bottom: -50px;
        }
        
        #phimCarousel .carousel-indicators button {
            background-color: #007bff;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: none;
            margin: 0 5px;
        }
        
        #phimCarousel .carousel-indicators button.active {
            background-color: #0056b3;
            transform: scale(1.3);
        }

        #phimCarousel .carousel-inner {
            padding-bottom: 60px;
        }
        
        #phimCarousel .carousel-item {
            min-height: 450px;
        }
        
        .lich-chieu-slide-item {
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border: 2px solid #28a745 !important;
        }
        
        .lich-chieu-slide-item:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
        }
        
        #lichChieuCarousel .carousel-inner {
            padding-bottom: 60px;
        }
        
        #lichChieuCarousel .carousel-item {
            min-height: 500px;
        }
        
        /* Animation khi chuyển slide */
        .carousel-item-start, .carousel-item-end {
            transition: transform 0.6s ease-in-out;
        }

        /* Timeline Styles - Simplified for today's schedule */
        .current-day-header {
            border-bottom: 3px solid #007bff;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }

        .current-day-header h5 {
            text-transform: capitalize;
            font-weight: 700;
            color: #0056b3;
        }

        .today-schedule-card {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 3px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .today-schedule-card:hover {
            border-color: #007bff;
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 123, 255, 0.2);
        }

        .schedule-time-header {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            color: white;
            padding: 12px 15px;
            text-align: center;
            border-bottom: 1px solid #dee2e6;
        }

        .schedule-time {
            font-size: 18px;
            font-weight: 700;
        }

        .schedule-content {
            padding: 15px;
        }

        .movie-title {
            font-size: 16px;
            font-weight: 600;
            line-height: 1.3;
            margin-bottom: 10px;
        }

        .schedule-info {
            margin-bottom: 15px;
        }

        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .info-item:last-child {
            margin-bottom: 0;
        }

        .schedule-action {
            border-top: 1px solid #f0f0f0;
            padding-top: 15px;
        }

        .status-badge {
            font-size: 11px;
            padding: 4px 8px;
        }

        .today-schedule-card .btn {
            font-size: 12px;
            padding: 6px 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .today-schedule-card .btn:hover:not(:disabled) {
            transform: scale(1.05);
        }

        .today-schedule-card .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

        .today-schedule-card .btn-warning:hover {
            background-color: #e0a800;
            border-color: #d39e00;
        }

        /* Animation for schedule cards */
        .today-schedule-card {
            opacity: 0;
            transform: translateY(20px);
            animation: slideInUp 0.6s ease forwards;
        }

        .today-schedule-card:nth-child(1) { animation-delay: 0.1s; }
        .today-schedule-card:nth-child(2) { animation-delay: 0.2s; }
        .today-schedule-card:nth-child(3) { animation-delay: 0.3s; }
        .today-schedule-card:nth-child(4) { animation-delay: 0.4s; }
        .today-schedule-card:nth-child(5) { animation-delay: 0.5s; }
        .today-schedule-card:nth-child(6) { animation-delay: 0.6s; }

        @@keyframes slideInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .current-day-header h5 {
                font-size: 1.1rem;
            }
            
            .today-schedule-card {
                margin-bottom: 15px;
            }
            
            .schedule-time {
                font-size: 16px;
            }
            
            .movie-title {
                font-size: 14px;
            }
        }

        .btn-hover-effect {
            transform: scale(1.05) !important;

            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4) !important;
        }

        /* Date Filter Styles */
        #dateFilter {
            background-color: white;

            border: 2px solid #007bff;
            border-radius: 8px;
            color: #495057;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        #dateFilter:focus {

            border-color: #0056b3;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            outline: none;
        }

        #dateFilter:hover {
            border-color: #0056b3;
        }

        /* Loading animation */
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .schedule-loading {
            animation: fadeIn 0.5s ease forwards;
        }

        /* Schedule transition */
        .schedule-transition {
            transition: all 0.3s ease;
        }

        /* Sorting Styles */
        .sort-dropdown .dropdown-item {
            transition: all 0.2s ease;
            padding: 8px 15px;
        }

        .sort-dropdown .dropdown-item:hover {
            background-color: #e3f2fd;
            color: #1976d2;
            transform: translateX(5px);
        }

        .sort-dropdown .dropdown-item i {
            width: 20px;
            text-align: center;
        }

        .btn-outline-info:hover {
            background-color: #17a2b8;
            border-color: #17a2b8;
            color: white;
        }

        .btn-outline-warning:hover {
            background-color: #ffc107;
            border-color: #ffc107;
            color: #212529;
        }

        /* Active sort indicator */
        .sort-active {
            background-color: #007bff !important;
            color: white !important;
        }

        /* Sort order indicator */
        .sort-order-indicator {
            font-size: 12px;
            margin-left: 5px;
            opacity: 0.8;
        }

        /* Responsive sorting */
        @@media (max-width: 768px) {
            .sort-controls {
                flex-direction: column;
                gap: 10px;
            }
            
            .sort-controls .dropdown {
                width: 100%;
            }

            .card-header .d-flex {
                flex-direction: column;
                gap: 10px;
                text-align: center;
            }

            .alert .d-flex {
                flex-direction: column;
                gap: 10px;
            }

            .alert .btn {
                align-self: center;
            }
        }

        /* Mobile optimization */
        @@media (max-width: 576px) {
            .phim-carousel-card .card-body {
                padding: 10px;
            }

            .phim-carousel-card .card-title {
                font-size: 14px;
            }

            .info-line {
                font-size: 12px;
            }

            .dropdown-menu {
                max-height: 200px;
                overflow-y: auto;
            }
        }

        /* Search and Autocomplete Styles */
        .search-container {
            position: relative;
        }

        .search-input {
            border-radius: 8px 0 0 8px;
            border-right: none;
        }

        .search-input:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            border-color: #007bff;
        }

        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            z-index: 1050;
            max-height: 400px;
            overflow-y: auto;
        }

        .suggestions-header {
            background: #f8f9fa;
            padding: 10px 15px;
            border-bottom: 1px solid #dee2e6;
            font-weight: 600;
            color: #495057;
            font-size: 14px;
        }

        .suggestions-list {
            max-height: 350px;
            overflow-y: auto;
        }

        .suggestion-item {
            padding: 12px 15px;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .suggestion-item:hover {
            background-color: #e3f2fd;
            transform: translateX(5px);
        }

        .suggestion-item:last-child {
            border-bottom: none;
        }

        .suggestion-item.no-results {
            color: #6c757d;
            font-style: italic;
        }

        .suggestion-title {
            font-weight: 600;
            color: #212529;
            margin-bottom: 2px;
        }

        .suggestion-details {
            font-size: 12px;
            color: #6c757d;
        }

        /* Advanced Search Modal Styles */
        .modal-lg .modal-body {
            padding: 20px;
        }

        .form-label {
            font-weight: 600;
            color: #495057;
        }

        /* Search Results Styles */
        .search-result-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }

        .search-result-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            border-color: #007bff;
        }

        .search-result-card .card-img-top {
            transition: all 0.3s ease;
        }

        .search-result-card:hover .card-img-top {
            transform: scale(1.05);
        }

        /* Search Button Animation */
        #searchBtn, #advancedSearchBtn {
            transition: all 0.3s ease;
        }

        #searchBtn:hover, #advancedSearchBtn:hover {
            transform: scale(1.05);
        }

        /* Loading Animation */
        .search-loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive Search */
        @@media (max-width: 768px) {
            .search-suggestions {
                max-height: 300px;
            }

            .suggestion-item {
                padding: 10px 12px;
            }

            .modal-lg {
                margin: 10px;
            }
        }
    </style>
}
